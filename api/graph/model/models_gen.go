// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package model

type Event struct {
	ID              string       `json:"id"`
	TransactionID   string       `json:"transactionId"`
	ChainID         string       `json:"chainId"`
	EventName       string       `json:"eventName"`
	ContractAddress string       `json:"contractAddress"`
	LogIndex        int          `json:"logIndex"`
	EventData       string       `json:"eventData"`
	CreateTime      string       `json:"createTime"`
	BlockNumber     int          `json:"blockNumber"`
	Transaction     *Transaction `json:"transaction"`
}

type Query struct {
}

type Subscription struct {
}

type TimeSeriesDataPoint struct {
	Timestamp     string  `json:"timestamp"`
	TokenPriceUsd *string `json:"tokenPriceUsd,omitempty"`
	BuyVolumeUsd  *string `json:"buyVolumeUsd,omitempty"`
	SellVolumeUsd *string `json:"sellVolumeUsd,omitempty"`
	VolumeUsd     *string `json:"volumeUsd,omitempty"`
	Txcnt         *int    `json:"txcnt,omitempty"`
	MakersCount   *int    `json:"makersCount,omitempty"`
	BuyCount      *int    `json:"buyCount,omitempty"`
	SellCount     *int    `json:"sellCount,omitempty"`
	BuyersCount   *int    `json:"buyersCount,omitempty"`
	SellersCount  *int    `json:"sellersCount,omitempty"`
}

type Token struct {
	ID            string         `json:"id"`
	ChainID       string         `json:"chainId"`
	ChainName     *string        `json:"chainName,omitempty"`
	TokenAddress  string         `json:"tokenAddress"`
	TokenSymbol   *string        `json:"tokenSymbol,omitempty"`
	TokenName     *string        `json:"tokenName,omitempty"`
	TokenDecimals *int           `json:"tokenDecimals,omitempty"`
	HypeScore     *int           `json:"hypeScore,omitempty"`
	SupplyUsd     *string        `json:"supplyUsd,omitempty"`
	LiquidityUsd  *string        `json:"liquidityUsd,omitempty"`
	CreateTime    string         `json:"createTime"`
	UpdateTime    string         `json:"updateTime"`
	CurrentPrice  *string        `json:"currentPrice,omitempty"`
	PriceChange1h *string        `json:"priceChange1h,omitempty"`
	Volume1h      *string        `json:"volume1h,omitempty"`
	BuyPressure1h *string        `json:"buyPressure1h,omitempty"`
	Metrics       []*TokenMetric `json:"metrics,omitempty"`
	Pairs         []*TwswapPair  `json:"pairs,omitempty"`
}

type TokenAnalytics struct {
	Token      *Token                 `json:"token"`
	TimeWindow string                 `json:"timeWindow"`
	DataPoints []*TimeSeriesDataPoint `json:"dataPoints"`
}

type TokenMetric struct {
	ID             string  `json:"id"`
	TokenID        string  `json:"tokenId"`
	TimeWindow     string  `json:"timeWindow"`
	EndTime        string  `json:"endTime"`
	VolumeUsd      *string `json:"volumeUsd,omitempty"`
	Txcnt          *int    `json:"txcnt,omitempty"`
	TokenPriceUsd  *string `json:"tokenPriceUsd,omitempty"`
	BuyPressureUsd *string `json:"buyPressureUsd,omitempty"`
	BuyersCount    *int    `json:"buyersCount,omitempty"`
	SellersCount   *int    `json:"sellersCount,omitempty"`
	BuyVolumeUsd   *string `json:"buyVolumeUsd,omitempty"`
	SellVolumeUsd  *string `json:"sellVolumeUsd,omitempty"`
	MakersCount    *int    `json:"makersCount,omitempty"`
	BuyCount       *int    `json:"buyCount,omitempty"`
	SellCount      *int    `json:"sellCount,omitempty"`
	UpdateTime     string  `json:"updateTime"`
	Token          *Token  `json:"token"`
}

type TokenStats struct {
	Token         *Token `json:"token"`
	CurrentPrice  string `json:"currentPrice"`
	PriceChange1h string `json:"priceChange1h"`
	Volume1h      string `json:"volume1h"`
	BuyPressure1h string `json:"buyPressure1h"`
	LastUpdate    string `json:"lastUpdate"`
}

type Transaction struct {
	ID                string   `json:"id"`
	ChainID           string   `json:"chainId"`
	TransactionHash   string   `json:"transactionHash"`
	BlockNumber       int      `json:"blockNumber"`
	BlockTimestamp    string   `json:"blockTimestamp"`
	FromAddress       string   `json:"fromAddress"`
	ToAddress         string   `json:"toAddress"`
	MethodName        *string  `json:"methodName,omitempty"`
	TransactionStatus int      `json:"transactionStatus"`
	GasUsed           int      `json:"gasUsed"`
	InputData         *string  `json:"inputData,omitempty"`
	CreateTime        string   `json:"createTime"`
	Events            []*Event `json:"events,omitempty"`
}

type TwswapFactory struct {
	ID             string `json:"id"`
	ChainID        string `json:"chainId"`
	FactoryAddress string `json:"factoryAddress"`
	TimeWindow     string `json:"timeWindow"`
	EndTime        string `json:"endTime"`
	PairCount      int    `json:"pairCount"`
	VolumeUsd      string `json:"volumeUsd"`
	LiquidityUsd   string `json:"liquidityUsd"`
	Txcnt          int    `json:"txcnt"`
	UpdateTime     string `json:"updateTime"`
}

type TwswapPair struct {
	ID                   string              `json:"id"`
	ChainID              string              `json:"chainId"`
	PairAddress          string              `json:"pairAddress"`
	Token0               *Token              `json:"token0"`
	Token1               *Token              `json:"token1"`
	FeeTier              string              `json:"feeTier"`
	CreatedAtTimestamp   string              `json:"createdAtTimestamp"`
	CreatedAtBlockNumber int                 `json:"createdAtBlockNumber"`
	Metrics              []*TwswapPairMetric `json:"metrics,omitempty"`
}

type TwswapPairMetric struct {
	ID              string      `json:"id"`
	PairID          string      `json:"pairId"`
	TimeWindow      string      `json:"timeWindow"`
	EndTime         string      `json:"endTime"`
	Token0Reserve   string      `json:"token0Reserve"`
	Token1Reserve   string      `json:"token1Reserve"`
	ReserveUsd      string      `json:"reserveUsd"`
	Token0VolumeUsd string      `json:"token0VolumeUsd"`
	Token1VolumeUsd string      `json:"token1VolumeUsd"`
	VolumeUsd       string      `json:"volumeUsd"`
	Txcnt           int         `json:"txcnt"`
	Pair            *TwswapPair `json:"pair"`
}
